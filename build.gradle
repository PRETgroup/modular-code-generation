version '0.5.9'

buildscript {
  ext.kotlin_version = '1.9.25'
  repositories {
    mavenCentral()
  }
  dependencies {
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
  }
}

apply plugin: 'kotlin'
apply plugin: 'application'
apply plugin: 'jacoco'

application {
    mainClass.set("me.nallen.modularcodegeneration.AppKt")
}

defaultTasks 'run'

repositories {
  mavenCentral()
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    testImplementation 'junit:junit:4.13'
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
    testImplementation 'io.kotlintest:kotlintest:2.0.7'
    implementation "com.fasterxml.jackson.core:jackson-databind:2.11.0"
    implementation "com.fasterxml.jackson.module:jackson-module-kotlin:2.11.0"
    implementation "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.11.0"
    implementation "com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.11.0"
    implementation "com.xenomachina:kotlin-argparser:2.0.7"
    implementation "com.hubspot.jinjava:jinjava:2.5.4"
    implementation "org.slf4j:slf4j-simple:1.7.30"
}

kotlin {
    jvmToolchain(17)
}
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

jacocoTestReport {
  reports {
    xml.required = true
    html.required = true
  }
}

test {
  testLogging {
    events = ["standard_out", "passed", "failed", "skipped"]
  }
}

def generatedVersionDir = "${buildDir}/generated-version"

sourceSets {
    main {
        output.dir(generatedVersionDir, builtBy: 'generateVersionProperties')
    }
}

task generateVersionProperties {
    doLast {
        def propertiesFile = file "$generatedVersionDir/version.properties"
        propertiesFile.parentFile.mkdirs()
        def properties = new Properties()
        properties.setProperty("version", rootProject.version.toString())
        propertiesFile.withWriter { properties.store(it, null) }
    }
}
processResources.dependsOn generateVersionProperties

jar {
  manifest {
    attributes 'Main-Class': 'me.nallen.modularcodegeneration.CliKt'
  }

  from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
}
